//
//  Question.swift
//  PersonalQwiz
//
//  Created by Ivan Honcharov on 23.07.25.
//

struct Question {
    let title: String
    let type: ResponseType
    let answers: [Answer]
    
    static func getQuestions() -> [Question] {
        [
            Question(
                title: "–ö–∞–∫—É—é –ø–∏—â—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                type: .single,
                answers: [
                    Answer(title: "–°—Ç–µ–π–∫", animal: .dog),
                    Answer(title: "–†—ã–±–∞", animal: .cat),
                    Answer(title: "–ú–∞—Ä–∫–æ–≤—å", animal: .rabbit),
                    Answer(title: "–ö—É–∫—É—Ä—É–∑–∞", animal: .turtle)
                ]
            ),
            Question(
                title: "–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—å—Å—è –±–æ–ª—å—à–µ?",
                type: .multiple,
                answers: [
                    Answer(title: "–ü–ª–∞–≤–∞—Ç—å", animal: .dog),
                    Answer(title: "–°–ø–∞—Ç—å", animal: .cat),
                    Answer(title: "–û–±–Ω–∏–º–∞—Ç—å—Å—è", animal: .rabbit),
                    Answer(title: "–ï—Å—Ç—å", animal: .turtle)
                ]
            ),
            Question(
                title: "–õ—é–±–∏—Ç–µ –ª–∏ –≤—ã –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ –º–∞—à–∏–Ω–µ?",
                type: .ranged,
                answers: [
                    Answer(title: "–ù–µ–Ω–∞–≤–∏–∂—É", animal: .cat),
                    Answer(title: "–ù–µ—Ä–≤–Ω–∏—á–∞—é", animal: .rabbit),
                    Answer(title: "–ù–µ–∑–∞–º–µ—á–∞—é", animal: .turtle),
                    Answer(title: "–û–±–æ–∂–∞—é", animal: .dog)
                ]
            )
        ]
    }
}

enum ResponseType {
    case single
    case multiple
    case ranged
}
struct Answer {
    let title: String
    let animal: Animal
    
}
enum Animal: Character {
    case dog = "üê∂"
    case cat = "üê±"
    case rabbit = "üê∞"
    case turtle = "üê¢"
    
    var definition: String {
        switch self {
        case .dog:
            "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—å—Å—è –±—ã—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏. –í—ã —Ö–æ—Ä–æ—à–∏–π –¥—Ä—É–≥, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—Ä–æ—Å–∏—Ç –≤ –±–µ–¥–µ, –∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–π —á–µ–ª."
        case .cat:
            "–í—ã —Ü–µ–Ω–∏—Ç–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ. –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –∑–∞–º–∫–Ω—É—Ç—ã –≤ —Å–µ–±–µ, –∏ –ª—é–±–∏—Ç–µ –≥—É–ª—è—Ç—å —Å–∞–º–∏ –ø–æ —Å–µ–±–µ."
        case .rabbit:
            "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—å—Å—è –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –Ω–∞ —à—É—Ö–µ—Ä–µ. –í—ã –∑–¥–æ—Ä–æ–≤—ã –∏ –ø–æ–ª–Ω—ã —ç–Ω–µ—Ä–≥–∏–∏."
        case .turtle:
            "–í—ã –Ω–∏–∫—É–¥–∞ –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –∏ —Å–≤–æ—ë —É–∂–µ —É–≤–∏–¥–µ–ª–∏ –∏ –¥–æ—Å—Ç–∏–≥–ª–∏.'–ò–¥—É—â–∏–π –∫ —Ä–µ–∫–µ' —ç—Ç–æ –ø—Ä–æ –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏."
        }
        
    }
}
